class Solution {
    public int maxProfit(int[] prices) {
        HashMap<String, Integer> hashmap = new HashMap<>();
        return helper(0, 0, prices, hashmap);//index , int buyOrSell
    }
    
    private int helper(int index, int buyOrSell, int[] prices, HashMap<String, Integer> hashmap){
        if(index>=prices.length){
            return 0;
        }
        String key = index+"aditi"+buyOrSell;
        if(hashmap.containsKey(key)){
            return hashmap.get(key);
        }
        int profit = 0;
        if(buyOrSell == 0){
            int buy = helper(index+1, 1, prices, hashmap) - prices[index];
            int notBuy = helper(index+1, 0, prices, hashmap);
            profit = Math.max(buy, notBuy);
        }
        else{
            int sell = helper(index+2, 0, prices, hashmap) + prices[index];
            int notSell = helper(index+1, 1, prices, hashmap);
            profit = Math.max(sell, notSell);
        }
        hashmap.put(key,profit);
        return profit;
    }
}
