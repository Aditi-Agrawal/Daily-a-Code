TC = (n*n)

class Solution {
    public int maxPoints(int[][] points) {
        if(points.length==1) return 1;
        if(points.length == 2) return 2;
        int max = 0;
        for(int[] point1 : points){
            // double->slope, Integer->no of points lying on the same line
            Map<Double, Integer> map = new HashMap<>();
            for(int[] point2 : points){
                if(point2==point1){
                    continue;
                }
                double slope = 0;
                if(point1[0]==point2[0]){
                    slope = Double.POSITIVE_INFINITY;
                }
                else{
                    slope = (point2[1]-point1[1])/(double)(point2[0]-point1[0]);
                }
                map.put(slope, map.getOrDefault(slope,0)+1);
                if(map.get(slope)>max){
                    max = map.get(slope);
                }
            }
        }
        return max+1;
    }
}
